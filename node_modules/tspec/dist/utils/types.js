"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.checkNever = exports.assertIsDefined = exports.isDefined = void 0;
function isDefined(val) {
    return val !== undefined && val !== null;
}
exports.isDefined = isDefined;
function assertIsDefined(val, msg) {
    if (!isDefined(val)) {
        throw new Error(`Expected 'val' to be defined, but received: ${val};${msg || ''}`);
    }
}
exports.assertIsDefined = assertIsDefined;
/**
 * NOTE(hyeonseong): This function does exhaustiveness checking to ensure
 * that you have discriminated a union so that no type remains.
 * Use this to get the typescript compiler to help discover cases that were not considered.
 */
function checkNever(x) {
    throw new Error(`Unexpected object: ${JSON.stringify(x)}`);
}
exports.checkNever = checkNever;
//# sourceMappingURL=types.js.map